// service.proto
//
// Copyright (C) Keysight Technologies, Inc
//
// Service and rpcs for infrastructure and annotations

syntax = "proto3";

package keysight_chakra.infra;

import "keysight_chakra/infra/infra.proto";
import "keysight_chakra/infra/annotate.proto";

message ValidationRequest {
  Infrastructure infrastructure = 1;
  repeated Annotation annotations = 2;
}

message ValidationError {
  oneof type {
    // optional fields must be set to a value
    string optional = 1;

    // oneof fields must have one field set
    string oneof = 2;

    // map keys must match a name field in the object
    string map = 3;

    // referential integrity check failed
    // the following cases fall under this type:
    // connection structure is incorrectly formatted
    // connection pieces are not present in the inventory or device instances
    // annotation infrastructure path is incorrectly formatted
    // annotation infrastructure path pieces are not present in the
    // infrastructure inventory
    string referential_integrity = 4;

    // scale up / scale out count
    string count = 5;
  }
}

message ValidationResponse {
  repeated ValidationError errors = 1;
  repeated string warnings = 2;
  repeated string info = 3;
}

service InfraService {
  // Validate rpc validates both infra and annotation messages
  rpc Validate(ValidationRequest) returns (ValidationResponse);
}
